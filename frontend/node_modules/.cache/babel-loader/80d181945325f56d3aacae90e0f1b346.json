{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAll, create, update, destroy } from './goalsAPI';\nconst goals = JSON.parse(localStorage.getItem('goals'));\nconst initialState = {\n  items: goals ? goals : [],\n  item: null,\n  message: '',\n  isLoading: false,\n  isSuccess: false,\n  isError: false\n};\nexport const fetchAllGoals = createAsyncThunk('goals/fetchAllGoals', async (token, thunkAPI) => {\n  try {} catch (error) {}\n});\nexport const createGoal = createAsyncThunk('goals/createGoal', async (goalData, thunkAPI) => {\n  try {} catch (error) {}\n});\nexport const goalsSlice = createSlice({\n  name: 'goals',\n  initialState,\n  reducers: {\n    reset: state => {\n      message = '';\n      isLoading = false;\n      isSuccess = false;\n      isError = false;\n    }\n  },\n  extraReducers: build => {}\n});\nexport const {\n  reset\n} = goalsSlice.actions;\nexport const selectGoalsState = state => state.goals;\nexport default goalsSlice.reducer;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/goals/goalsSlice.js"],"names":["createAsyncThunk","createSlice","fetchAll","create","update","destroy","goals","JSON","parse","localStorage","getItem","initialState","items","item","message","isLoading","isSuccess","isError","fetchAllGoals","token","thunkAPI","error","createGoal","goalData","goalsSlice","name","reducers","reset","state","extraReducers","build","actions","selectGoalsState","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,QAAkD,YAAlD;AAGA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEN,KAAK,GAAGA,KAAH,GAAW,EADN;AAEjBO,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,SAAS,EAAE,KAJM;AAKjBC,EAAAA,SAAS,EAAE,KALM;AAMjBC,EAAAA,OAAO,EAAE;AANQ,CAArB;AASA,OAAO,MAAMC,aAAa,GAAGlB,gBAAgB,CACzC,qBADyC,EAEzC,OAAOmB,KAAP,EAAcC,QAAd,KAA2B;AACvB,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ,CARwC,CAAtC;AAWP,OAAO,MAAMC,UAAU,GAAGtB,gBAAgB,CACtC,kBADsC,EAEtC,OAAOuB,QAAP,EAAiBH,QAAjB,KAA8B;AAC1B,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ,CARqC,CAAnC;AAaP,OAAO,MAAMG,UAAU,GAAGvB,WAAW,CAAC;AAClCwB,EAAAA,IAAI,EAAE,OAD4B;AAElCd,EAAAA,YAFkC;AAGlCe,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACZd,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,SAAS,GAAG,KAAZ;AACAC,MAAAA,SAAS,GAAG,KAAZ;AACAC,MAAAA,OAAO,GAAG,KAAV;AACH;AANK,GAHwB;AAWlCY,EAAAA,aAAa,EAAEC,KAAK,IAAI,CAEvB;AAbiC,CAAD,CAA9B;AAgBP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAYH,UAAU,CAACO,OAA7B;AAEP,OAAO,MAAMC,gBAAgB,GAAGJ,KAAK,IAAIA,KAAK,CAACtB,KAAxC;AAEP,eAAekB,UAAU,CAACS,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { fetchAll, create, update, destroy } from './goalsAPI'\n\n\nconst goals = JSON.parse(localStorage.getItem('goals'))\n\nconst initialState = {\n    items: goals ? goals : [],\n    item: null,\n    message: '',\n    isLoading: false,\n    isSuccess: false,\n    isError: false\n}\n\nexport const fetchAllGoals = createAsyncThunk(\n    'goals/fetchAllGoals',\n    async (token, thunkAPI) => {\n        try {\n            \n        } catch (error) {\n            \n        }\n    }\n)\n\nexport const createGoal = createAsyncThunk(\n    'goals/createGoal',\n    async (goalData, thunkAPI) => {\n        try {\n            \n        } catch (error) {\n            \n        }\n    }\n)\n\n\n\nexport const goalsSlice = createSlice({\n    name: 'goals',\n    initialState,\n    reducers: {\n        reset: state => {\n            message = ''\n            isLoading = false\n            isSuccess = false \n            isError = false\n        }\n    },\n    extraReducers: build => {\n\n    }\n})\n\nexport const { reset } = goalsSlice.actions\n\nexport const selectGoalsState = state => state.goals\n\nexport default goalsSlice.reducer"]},"metadata":{},"sourceType":"module"}