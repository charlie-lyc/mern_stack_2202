{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { read, create, remove, update } from './goalsAPI';\nconst initialState = {\n  items: [],\n  message: '',\n  isLoading: false,\n  isSuccess: false,\n  isError: false\n};\nexport const readGoals = createAsyncThunk('goals/fetchGoals', async (_, thunkAPI) => {\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await read(userToken);\n    return res.data.reverse();\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // export const createGoal = createAsyncThunk(\n//     'goals/createGoal',\n//     async ({ goalData, token }, thunkAPI) => {\n//         try {\n//             const res = await create(goalData, token)\n//             return res.data\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n/////////////////////////////////////////////////////////////////\n\nexport const createGoal = createAsyncThunk('goals/createGoal', async (goalData, thunkAPI) => {\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await create(goalData, userToken);\n    return res.data;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deleteGoal = createAsyncThunk('goals/destroyGoal', async (goalId, thunkAPI) => {\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await remove(goalId, userToken);\n    return res.data;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateGoal = createAsyncThunk('goals/updateGoal', async (_ref, thunkAPI) => {\n  let {\n    goalId,\n    goalData\n  } = _ref;\n\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await update(goalId, goalData, userToken);\n    return res.data;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const goalsSlice = createSlice({\n  name: 'goals',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.message = '';\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n    },\n    deletedItems: state => {\n      state.items = [];\n    }\n  },\n  extraReducers: build => {\n    build.addCase(readGoals.pending, state => {\n      state.isLoading = true;\n    }).addCase(readGoals.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.items = action.payload;\n    }).addCase(readGoals.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n    build.addCase(createGoal.pending, state => {\n      state.isLoading = true;\n    }).addCase(createGoal.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true; // state.items.unshift(action.payload)\n      ////////////////////////////////////////////////\n\n      state.items = [action.payload, ...state.items];\n    }).addCase(createGoal.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n    build.addCase(removeGoal.pending, state => {\n      state.isLoading = true;\n    }).addCase(removeGoal.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.items = state.items.filter(item => item.id !== action.payload.id);\n    }).addCase(removeGoal.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n    build.addCase(updateGoal.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateGoal.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.items = state.items.map(item => item.id === action.payload.id ? action.payload : item);\n    }).addCase(updateGoal.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset,\n  deletedItems\n} = goalsSlice.actions;\nexport const selectGoals = state => state.goals;\nexport default goalsSlice.reducer;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/goals/goalsSlice.js"],"names":["createAsyncThunk","createSlice","read","create","remove","update","initialState","items","message","isLoading","isSuccess","isError","readGoals","_","thunkAPI","userToken","getState","auth","user","token","res","data","reverse","error","response","toString","rejectWithValue","createGoal","goalData","deleteGoal","goalId","updateGoal","goalsSlice","name","reducers","reset","state","deletedItems","extraReducers","build","addCase","pending","fulfilled","action","payload","rejected","removeGoal","filter","item","id","map","actions","selectGoals","goals","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { read, create, remove, update } from './goalsAPI'\n\n\nconst initialState = {\n    items: [],\n    message: '',\n    isLoading: false,\n    isSuccess: false,\n    isError: false\n}\n\nexport const readGoals = createAsyncThunk(\n    'goals/fetchGoals',\n    async (_, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await read(userToken)\n            return res.data.reverse()\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n// export const createGoal = createAsyncThunk(\n//     'goals/createGoal',\n//     async ({ goalData, token }, thunkAPI) => {\n//         try {\n//             const res = await create(goalData, token)\n//             return res.data\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n/////////////////////////////////////////////////////////////////\nexport const createGoal = createAsyncThunk(\n    'goals/createGoal',\n    async (goalData, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await create(goalData, userToken)\n            return res.data\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const deleteGoal = createAsyncThunk(\n    'goals/destroyGoal',\n    async (goalId, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await remove(goalId, userToken)\n            return res.data\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const updateGoal = createAsyncThunk(\n    'goals/updateGoal',\n    async ({ goalId, goalData }, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await update(goalId, goalData, userToken)\n            return res.data\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const goalsSlice = createSlice({\n    name: 'goals',\n    initialState,\n    reducers: {\n        reset: state => {\n            state.message = ''\n            state.isLoading = false\n            state.isSuccess = false\n            state.isError = false\n        },\n        deletedItems: state => {\n            state.items = []\n        }\n    },\n    extraReducers: build => {\n        build.addCase(readGoals.pending, state => {\n                state.isLoading = true\n            }).addCase(readGoals.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.items = action.payload\n            }).addCase(readGoals.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n        build.addCase(createGoal.pending, state => {\n                state.isLoading = true\n            }).addCase(createGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                // state.items.unshift(action.payload)\n                ////////////////////////////////////////////////\n                state.items = [ action.payload, ...state.items ]\n            }).addCase(createGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n        build.addCase(removeGoal.pending, state => {\n                state.isLoading = true\n            }).addCase(removeGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.items = state.items.filter(item => item.id !== action.payload.id )\n            }).addCase(removeGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n        build.addCase(updateGoal.pending, state => {\n                state.isLoading = true\n            }).addCase(updateGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.items = state.items.map(item => item.id === action.payload.id ? action.payload : item )\n            }).addCase(updateGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n    }\n})\n\nexport const { reset, deletedItems } = goalsSlice.actions\n\nexport const selectGoals = state => state.goals\n\nexport default goalsSlice.reducer"]},"metadata":{},"sourceType":"module"}