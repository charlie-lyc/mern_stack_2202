{"ast":null,"code":"import _objectSpread from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{useDispatch}from'react-redux';import{deleteGoal,updateGoal}from'../features/goals/goalsSlice';////////////////////////////////////////\nimport{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GoalItem=function GoalItem(_ref){var goal=_ref.goal;var _useState=useState({text:goal.text?goal.text:'',isUpdated:false}),_useState2=_slicedToArray(_useState,2),currentGoal=_useState2[0],setCurrentGoal=_useState2[1];var handleChange=function handleChange(e){setCurrentGoal(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{text:e.target.value});});};var dispatch=useDispatch();var handleDelete=function handleDelete(){dispatch(deleteGoal(goal.id));};var toggleUpdate=function toggleUpdate(){setCurrentGoal(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isUpdated:!prevState.isUpdated});});};var handleUpdate=function handleUpdate(){if(!currentGoal.text){return toast.error('Rewrite your goal!',{autoClose:750});}dispatch(updateGoal({goalId:goal.id,goalData:{text:currentGoal.text}}));toggleUpdate();};return/*#__PURE__*/_jsx(\"div\",{className:\"goal\",children:!currentGoal.isUpdated?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:goal.text}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"inline-block\"},children:new Date(goal.createdAt).toLocaleString('en-US')}),/*#__PURE__*/_jsx(\"button\",{className:\"rewrite\",onClick:toggleUpdate,style:{fontWeight:\"bold\"},children:\"Rewrite\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close\",onClick:handleDelete,style:{fontWeight:\"bold\"},children:\"X\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:handleChange,value:currentGoal.text,placeholder:\"Rewrite your goal\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"rewrite\",onClick:handleUpdate,style:{fontWeight:\"bold\"},children:\"Done\"})]})});};export default GoalItem;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/GoalItem.jsx"],"names":["useState","useDispatch","deleteGoal","updateGoal","toast","GoalItem","goal","text","isUpdated","currentGoal","setCurrentGoal","handleChange","e","prevState","target","value","dispatch","handleDelete","id","toggleUpdate","handleUpdate","error","autoClose","goalId","goalData","display","Date","createdAt","toLocaleString","fontWeight"],"mappings":"uTAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,CAAqBC,UAArB,KAAuC,8BAAvC,CACA;AACA,OAASC,KAAT,KAAsB,gBAAtB,C,6IAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC3B,cAAwCN,QAAQ,CAAC,CAC7CO,IAAI,CAAED,IAAI,CAACC,IAAL,CAAYD,IAAI,CAACC,IAAjB,CAAwB,EADe,CAE7CC,SAAS,CAAE,KAFkC,CAAD,CAAhD,wCAAQC,WAAR,eAAqBC,cAArB,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACtBF,cAAc,CAAC,SAACG,SAAD,wCACRA,SADQ,MAEXN,IAAI,CAAEK,CAAC,CAACE,MAAF,CAASC,KAFJ,IAAD,CAAd,CAIH,CALD,CAOA,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CAEA,GAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBD,QAAQ,CAACd,UAAU,CAACI,IAAI,CAACY,EAAN,CAAX,CAAR,CACH,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBT,cAAc,CAAC,SAACG,SAAD,wCACRA,SADQ,MAEXL,SAAS,CAAE,CAACK,SAAS,CAACL,SAFX,IAAD,CAAd,CAIH,CALD,CAOA,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAI,CAACX,WAAW,CAACF,IAAjB,CAAuB,CACnB,MAAOH,CAAAA,KAAK,CAACiB,KAAN,CAAY,oBAAZ,CAAkC,CAAEC,SAAS,CAAE,GAAb,CAAlC,CAAP,CACH,CACDN,QAAQ,CAACb,UAAU,CAAC,CAChBoB,MAAM,CAAEjB,IAAI,CAACY,EADG,CAEhBM,QAAQ,CAAE,CAAEjB,IAAI,CAAEE,WAAW,CAACF,IAApB,CAFM,CAAD,CAAX,CAAR,CAIAY,YAAY,GACf,CATD,CAWA,mBACI,YAAK,SAAS,CAAC,MAAf,UAEQ,CAACV,WAAW,CAACD,SAAb,cACA,wCACI,oBAAMF,IAAI,CAACC,IAAX,EADJ,cAEI,YAAK,KAAK,CAAG,CAAEkB,OAAO,CAAE,cAAX,CAAb,UAEM,GAAIC,CAAAA,IAAJ,CAASpB,IAAI,CAACqB,SAAd,EAAyBC,cAAzB,CAAwC,OAAxC,CAFN,EAFJ,cAMI,eAAQ,SAAS,CAAC,SAAlB,CACI,OAAO,CAAGT,YADd,CAEI,KAAK,CAAG,CAAEU,UAAU,CAAE,MAAd,CAFZ,qBANJ,cAWI,eAAQ,SAAS,CAAC,OAAlB,CACI,OAAO,CAAGZ,YADd,CAEI,KAAK,CAAG,CAAEY,UAAU,CAAE,MAAd,CAFZ,eAXJ,GADA,cAmBA,wCACI,YAAK,SAAS,CAAC,YAAf,uBACI,cAAO,IAAI,CAAC,MAAZ,CACI,QAAQ,CAAGlB,YADf,CAEI,KAAK,CAAGF,WAAW,CAACF,IAFxB,CAGI,WAAW,CAAC,mBAHhB,EADJ,EADJ,cAOI,eAAQ,SAAS,CAAC,SAAlB,CACI,OAAO,CAAGa,YADd,CAEI,KAAK,CAAG,CAAES,UAAU,CAAE,MAAd,CAFZ,kBAPJ,GArBR,EADJ,CAsCH,CA3ED,CA6EA,cAAexB,CAAAA,QAAf","sourcesContent":["import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { deleteGoal, updateGoal } from '../features/goals/goalsSlice'\n////////////////////////////////////////\nimport { toast } from 'react-toastify'\n\n\nconst GoalItem = ({ goal }) => {\n    const [ currentGoal, setCurrentGoal ] = useState({\n        text: goal.text ? goal.text : '',\n        isUpdated: false\n    })\n\n    const handleChange = e => {\n        setCurrentGoal((prevState) => ({\n            ...prevState,\n            text: e.target.value\n        }))\n    }\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(deleteGoal(goal.id))\n    }\n\n    const toggleUpdate = () => {\n        setCurrentGoal((prevState) => ({\n            ...prevState,\n            isUpdated: !prevState.isUpdated\n        }))\n    }\n\n    const handleUpdate = () => {\n        if (!currentGoal.text) {\n            return toast.error('Rewrite your goal!', { autoClose: 750 })\n        }\n        dispatch(updateGoal({ \n            goalId: goal.id, \n            goalData: { text: currentGoal.text }\n        }))\n        toggleUpdate()\n    }\n\n    return (\n        <div className=\"goal\">\n            {\n                !currentGoal.isUpdated ?\n                <>\n                    <h3>{ goal.text }</h3>\n                    <div style={ { display: \"inline-block\" } }>\n                        {/* { new Date(goal.createdAt).toLocaleString('ko-KR') } */}\n                        { new Date(goal.createdAt).toLocaleString('en-US') }\n                    </div>\n                    <button className='rewrite' \n                        onClick={ toggleUpdate } \n                        style={ { fontWeight: \"bold\" } }>\n                        Rewrite\n                    </button>\n                    <button className='close' \n                        onClick={ handleDelete } \n                        style={ { fontWeight: \"bold\" } }>\n                        X\n                    </button>\n                </> \n                :\n                <>\n                    <div className='form-group'>\n                        <input type=\"text\" \n                            onChange={ handleChange } \n                            value={ currentGoal.text } \n                            placeholder='Rewrite your goal' />\n                    </div>\n                    <button className='rewrite' \n                        onClick={ handleUpdate } \n                        style={ { fontWeight: \"bold\" } }>\n                        Done\n                    </button>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default GoalItem"]},"metadata":{},"sourceType":"module"}