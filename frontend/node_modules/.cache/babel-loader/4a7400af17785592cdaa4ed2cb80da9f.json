{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { register, login, logout } from './authAPI';\n/**\n * Get User from Local Storage\n */\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  message: '',\n  // status: 'idle' || 'loading' || 'success' || 'error'\n  isLoading: false,\n  isSuccess: false,\n  isError: false\n};\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, thunkAPI) => {\n  try {\n    const response = await register(userData); // console.log(response)\n\n    return response.data.message; // return <Payload>\n  } catch (error) {\n    // console.log(error.response.data.message)\n    // console.log(error.message)\n    // console.log(error.toString())\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, thunkAPI) => {\n  try {\n    const res = await login(userData); // console.log(res)\n\n    if (res.data) {\n      localStorage.setItem('user', JSON.stringify(res.data));\n    }\n\n    return res.data;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async (undefined, thunkAPI) => {\n  try {\n    const res = await logout(); // console.log(res)\n\n    return res.data.message;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.user = null;\n      state.message = ''; // status: 'idle' || 'loading' || 'success' || 'error'\n\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      // state.status = 'loading'\n      state.isLoading = true;\n      state.isSuccess = false;\n      state.isError = false;\n      state.user = null;\n      state.message = '';\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      // state.status = 'success'\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = false;\n      state.user = null;\n      state.message = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      // state.status = 'error'\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.user = null;\n      state.message = action.payload;\n    });\n    builder.addCase(loginUser.pending, state => {\n      // state.status = 'loading'\n      state.isLoading = true;\n      state.isSuccess = false;\n      state.isError = false;\n      state.user = null;\n      state.message = '';\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      // state.status = 'success'\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.isError = false;\n      state.user = action.payload;\n      state.message = '';\n    }).addCase(loginUser.rejected, (state, action) => {\n      // state.status = 'error'\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = true;\n      state.user = null;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport const selectUser = state => state.auth.user;\nexport const selectMessage = state => state.auth.message;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/auth/authSlice.js"],"names":["createAsyncThunk","createSlice","register","login","logout","user","JSON","parse","localStorage","getItem","initialState","message","isLoading","isSuccess","isError","registerUser","userData","thunkAPI","response","data","error","toString","rejectWithValue","loginUser","res","setItem","stringify","logoutUser","undefined","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","selectUser","auth","selectMessage","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { register, login, logout } from './authAPI'\n\n/**\n * Get User from Local Storage\n */\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n    user: user ? user : null,\n    message: '',\n    // status: 'idle' || 'loading' || 'success' || 'error'\n    isLoading: false,\n    isSuccess: false,\n    isError: false\n}\n\nexport const registerUser = createAsyncThunk(\n    'auth/registerUser',\n    async (userData, thunkAPI) => {\n        try {\n            const response = await register(userData)\n            // console.log(response)\n            return response.data.message // return <Payload>\n        } catch (error) {\n            // console.log(error.response.data.message)\n            // console.log(error.message)\n            // console.log(error.toString())\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const loginUser = createAsyncThunk(\n    'auth/loginUser',\n    async (userData, thunkAPI) => {\n        try {\n            const res = await login(userData)\n            // console.log(res)\n            if (res.data) {\n                localStorage.setItem('user', JSON.stringify(res.data))\n            }\n            return res.data\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const logoutUser = createAsyncThunk(\n    'auth/logoutUser',\n    async (undefined, thunkAPI) => {\n        try {\n            const res = await logout()\n            // console.log(res)\n            return res.data.message\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: state => {\n            state.user = null\n            state.message = ''\n            // status: 'idle' || 'loading' || 'success' || 'error'\n            state.isError = false\n            state.isLoading = false\n            state.isSuccess = false\n        }\n    },\n    extraReducers: builder => {\n        builder.addCase(registerUser.pending, state => {\n                // state.status = 'loading'\n                state.isLoading = true\n                state.isSuccess = false\n                state.isError = false\n                state.user = null\n                state.message = ''\n            }).addCase(registerUser.fulfilled, (state, action) => {\n                // state.status = 'success'\n                state.isLoading = false\n                state.isSuccess = true\n                state.isError = false\n                state.user = null\n                state.message = action.payload\n            }).addCase(registerUser.rejected, (state, action) => {\n                // state.status = 'error'\n                state.isLoading = false\n                state.isSuccess = false\n                state.isError = true\n                state.user = null\n                state.message = action.payload\n            })\n        builder.addCase(loginUser.pending, state => {\n                // state.status = 'loading'\n                state.isLoading = true\n                state.isSuccess = false\n                state.isError = false\n                state.user = null\n                state.message = ''\n            }).addCase(loginUser.fulfilled, (state, action) => {\n                // state.status = 'success'\n                state.isLoading = false\n                state.isSuccess = true\n                state.isError = false\n                state.user = action.payload\n                state.message = ''\n            }).addCase(loginUser.rejected, (state, action) => {\n                // state.status = 'error'\n                state.isLoading = false\n                state.isSuccess = false\n                state.isError = true\n                state.user = null\n                state.message = action.payload\n            })\n    }\n})\n\nexport const { reset } = authSlice.actions\n\nexport const selectUser = state => state.auth.user\nexport const selectMessage = state => state.auth.message\n\n\nexport default authSlice.reducer"]},"metadata":{},"sourceType":"module"}