{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { register, login } from './authAPI';\n/**\n * Get User from Local Storage\n */\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  message: '',\n  // status: 'error' || 'loading' || 'success'\n  isError: false,\n  isLoading: false,\n  isSuccess: false\n};\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, thunkAPI) => {\n  try {\n    const response = await register(userData); // console.log(response)\n\n    return response.data;\n  } catch (error) {\n    // console.log(error.response.data.message)\n    // console.log(error.message)\n    // console.log(error.toString())\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, thunkAPI) => {\n  try {\n    const res = await login(userData);\n    console.log(res);\n\n    if (res.data) {\n      localStorage.setItem('user', JSON.stringify(res.data));\n      return res.data;\n    }\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.message = ''; // state.status = 'error' || 'loading' || 'success'\n\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(registerUser.fulfilled, state => {\n      state.isSuccess = true;\n    }).addCase(registerUser.rejected, state => {\n      state.isError = true;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport const selectMessage = state => state.auth.message;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/auth/authSlice.js"],"names":["createAsyncThunk","createSlice","register","login","user","JSON","parse","localStorage","getItem","initialState","message","isError","isLoading","isSuccess","registerUser","userData","thunkAPI","response","data","error","toString","rejectWithValue","loginUser","res","console","log","setItem","stringify","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectMessage","auth","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,WAAhC;AAEA;AACA;AACA;;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;AACjBL,EAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADH;AAEjBM,EAAAA,OAAO,EAAE,EAFQ;AAGjB;AACAC,EAAAA,OAAO,EAAE,KAJQ;AAKjBC,EAAAA,SAAS,EAAE,KALM;AAMjBC,EAAAA,SAAS,EAAE;AANM,CAArB;AASA,OAAO,MAAMC,YAAY,GAAGd,gBAAgB,CACxC,mBADwC,EAExC,OAAOe,QAAP,EAAiBC,QAAjB,KAA8B;AAC1B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMf,QAAQ,CAACa,QAAD,CAA/B,CADA,CAEA;;AACA,WAAOE,QAAQ,CAACC,IAAhB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ;AACA;AACA;AACA,UAAMT,OAAO,GAAGS,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBR,OAApB,IAA+BS,KAAK,CAACT,OAArC,IAAgDS,KAAK,CAACC,QAAN,EAAhE;AACA,WAAOJ,QAAQ,CAACK,eAAT,CAAyBX,OAAzB,CAAP;AACH;AACJ,CAduC,CAArC;AAiBP,OAAO,MAAMY,SAAS,GAAGtB,gBAAgB,CACrC,gBADqC,EAErC,OAAOe,QAAP,EAAiBC,QAAjB,KAA8B;AAC1B,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMpB,KAAK,CAACY,QAAD,CAAvB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,QAAIA,GAAG,CAACL,IAAR,EAAc;AACVX,MAAAA,YAAY,CAACmB,OAAb,CAAqB,MAArB,EAA6BrB,IAAI,CAACsB,SAAL,CAAeJ,GAAG,CAACL,IAAnB,CAA7B;AACA,aAAOK,GAAG,CAACL,IAAX;AACH;AACJ,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZ,UAAMT,OAAO,GAAGS,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBR,OAApB,IAA+BS,KAAK,CAACT,OAArC,IAAgDS,KAAK,CAACC,QAAN,EAAhE;AACA,WAAOJ,QAAQ,CAACK,eAAT,CAAyBX,OAAzB,CAAP;AACH;AACJ,CAdoC,CAAlC;AAiBP,OAAO,MAAMkB,SAAS,GAAG3B,WAAW,CAAC;AACjC4B,EAAAA,IAAI,EAAE,MAD2B;AAEjCpB,EAAAA,YAFiC;AAGjCqB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAEC,KAAK,IAAI;AACZA,MAAAA,KAAK,CAACtB,OAAN,GAAgB,EAAhB,CADY,CAEZ;;AACAsB,MAAAA,KAAK,CAACrB,OAAN,GAAgB,KAAhB;AACAqB,MAAAA,KAAK,CAACpB,SAAN,GAAkB,KAAlB;AACAoB,MAAAA,KAAK,CAACnB,SAAN,GAAkB,KAAlB;AACH;AAPK,GAHuB;AAYjCoB,EAAAA,aAAa,EAAEC,OAAO,IAAG;AACrBA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,YAAY,CAACsB,OAA7B,EAAsCJ,KAAK,IAAI;AACvCA,MAAAA,KAAK,CAACpB,SAAN,GAAkB,IAAlB;AACH,KAFL,EAEOuB,OAFP,CAEerB,YAAY,CAACuB,SAF5B,EAEuCL,KAAK,IAAI;AACxCA,MAAAA,KAAK,CAACnB,SAAN,GAAkB,IAAlB;AACH,KAJL,EAIOsB,OAJP,CAIerB,YAAY,CAACwB,QAJ5B,EAIsCN,KAAK,IAAI;AACvCA,MAAAA,KAAK,CAACrB,OAAN,GAAgB,IAAhB;AACH,KANL;AAOH;AApBgC,CAAD,CAA7B;AAuBP,OAAO,MAAM;AAAEoB,EAAAA;AAAF,IAAYH,SAAS,CAACW,OAA5B;AAEP,OAAO,MAAMC,aAAa,GAAGR,KAAK,IAAIA,KAAK,CAACS,IAAN,CAAW/B,OAA1C;AAEP,eAAekB,SAAS,CAACc,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { register, login } from './authAPI'\n\n/**\n * Get User from Local Storage\n */\nconst user = JSON.parse(localStorage.getItem('user'))\n\nconst initialState = {\n    user: user ? user : null,\n    message: '',\n    // status: 'error' || 'loading' || 'success'\n    isError: false,\n    isLoading: false,\n    isSuccess: false\n}\n\nexport const registerUser = createAsyncThunk(\n    'auth/registerUser',\n    async (userData, thunkAPI) => {\n        try {\n            const response = await register(userData)\n            // console.log(response)\n            return response.data\n        } catch (error) {\n            // console.log(error.response.data.message)\n            // console.log(error.message)\n            // console.log(error.toString())\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const loginUser = createAsyncThunk(\n    'auth/loginUser',\n    async (userData, thunkAPI) => {\n        try {\n            const res = await login(userData)\n            console.log(res)\n            if (res.data) {\n                localStorage.setItem('user', JSON.stringify(res.data))\n                return res.data\n            }\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: state => {\n            state.message = ''\n            // state.status = 'error' || 'loading' || 'success'\n            state.isError = false\n            state.isLoading = false\n            state.isSuccess = false\n        }\n    },\n    extraReducers: builder =>{\n        builder.addCase(registerUser.pending, state => {\n                state.isLoading = true\n            }).addCase(registerUser.fulfilled, state => {\n                state.isSuccess = true\n            }).addCase(registerUser.rejected, state => {\n                state.isError = true\n            })\n    }\n})\n\nexport const { reset } = authSlice.actions\n\nexport const selectMessage = state => state.auth.message\n\nexport default authSlice.reducer"]},"metadata":{},"sourceType":"module"}