{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/GoalItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteGoal, updateGoal } from '../features/goals/goalsSlice'; ////////////////////////////////////////\n\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GoalItem = _ref => {\n  _s();\n\n  let {\n    goal\n  } = _ref;\n  const [currentGoal, setCurrentGoal] = useState({\n    text: goal.text ? goal.text : '',\n    isUpdated: false\n  });\n\n  const handleChange = e => {\n    setCurrentGoal(prevState => ({ ...prevState,\n      text: e.target.value\n    }));\n  };\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteGoal(goal.id));\n  };\n\n  const toggleUpdate = () => {\n    setCurrentGoal(prevState => ({ ...prevState,\n      isUpdated: !prevState.isUpdated\n    }));\n  };\n\n  const handleUpdate = () => {\n    if (!currentGoal.text) {\n      return toast.error('Rewrite your goal!', {\n        autoClose: 750\n      });\n    }\n\n    dispatch(updateGoal({\n      goalId: goal.id,\n      goalData: {\n        text: currentGoal.text\n      }\n    }));\n    toggleUpdate();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goal\",\n    children: !currentGoal.isUpdated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goal.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: new Date(goal.createdAt).toLocaleString('en-US')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rewrite\",\n        onClick: toggleUpdate,\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"[Rewrite]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close\",\n        onClick: handleDelete,\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleChange,\n          value: currentGoal.text,\n          placeholder: \"Rewrite your goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rewrite\",\n        onClick: handleUpdate,\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"|Done|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GoalItem, \"Mk/+Nnz0+tbrHq9IlQoulaLmSA4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = GoalItem;\nexport default GoalItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalItem\");","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/GoalItem.jsx"],"names":["useState","useDispatch","deleteGoal","updateGoal","toast","GoalItem","goal","currentGoal","setCurrentGoal","text","isUpdated","handleChange","e","prevState","target","value","dispatch","handleDelete","id","toggleUpdate","handleUpdate","error","autoClose","goalId","goalData","display","Date","createdAt","toLocaleString","fontWeight"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { deleteGoal, updateGoal } from '../features/goals/goalsSlice'\n////////////////////////////////////////\nimport { toast } from 'react-toastify'\n\n\nconst GoalItem = ({ goal }) => {\n    const [ currentGoal, setCurrentGoal ] = useState({\n        text: goal.text ? goal.text : '',\n        isUpdated: false\n    })\n\n    const handleChange = e => {\n        setCurrentGoal((prevState) => ({\n            ...prevState,\n            text: e.target.value\n        }))\n    }\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(deleteGoal(goal.id))\n    }\n\n    const toggleUpdate = () => {\n        setCurrentGoal((prevState) => ({\n            ...prevState,\n            isUpdated: !prevState.isUpdated\n        }))\n    }\n\n    const handleUpdate = () => {\n        if (!currentGoal.text) {\n            return toast.error('Rewrite your goal!', { autoClose: 750 })\n        }\n        dispatch(updateGoal({ \n            goalId: goal.id, \n            goalData: { text: currentGoal.text }\n        }))\n        toggleUpdate()\n    }\n\n    return (\n        <div className=\"goal\">\n            {\n                !currentGoal.isUpdated ?\n                <>\n                    <h3>{ goal.text }</h3>\n                    <div style={ { display: \"inline-block\" } }>\n                        {/* { new Date(goal.createdAt).toLocaleString('ko-KR') } */}\n                        { new Date(goal.createdAt).toLocaleString('en-US') }\n                    </div>\n                    <button className='rewrite' \n                        onClick={ toggleUpdate } \n                        style={ { fontWeight: \"bold\" } }>\n                        [Rewrite]\n                    </button>\n                    <button className='close' \n                        onClick={ handleDelete } \n                        style={ { fontWeight: \"bold\" } }>\n                        X\n                    </button>\n                </> \n                :\n                <>\n                    <div className='form-group'>\n                        <input type=\"text\" \n                            onChange={ handleChange } \n                            value={ currentGoal.text } \n                            placeholder='Rewrite your goal' />\n                    </div>\n                    <button className='rewrite' \n                        onClick={ handleUpdate } \n                        style={ { fontWeight: \"bold\" } }>\n                        |Done|\n                    </button>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default GoalItem"]},"metadata":{},"sourceType":"module"}