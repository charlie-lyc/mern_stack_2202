{"ast":null,"code":"// export const register = (userData) => {\n//     return fetch('http://localhost:5000/api/users', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(userData)\n//             }).then(res => res.json())\n// }\n//////////////////////////////////////////////////////////////////\n\n/**\n * Using Axios and Proxy(within package.json - \"proxy\": \"http://localhost:5000\")\n */\nimport axios from 'axios';\nexport const register = async userData => {\n  // return await axios.post('/api/users/', userData) // But Proxy is not working!!!\n  ///////////////////////////////////////////////////\n  return await axios.post('http://localhost:5000/api/users/', userData);\n};\nexport const login = async userData => {\n  return await axios.post('http://localhost:5000/api/users/login', userData);\n};\nexport const getUser = async token => {\n  return await axios.get('http://localhost:5000/api/users/me', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n};\n/* Solution1: Failed */\n// export const logout = async () => {\n//     return await axios.post(\n//             'http://localhost:5000/api/users/logout', \n//             {}, \n//             {   headers: { \n//                     'Authorization': `Bearer ${token}` \n//                 }\n//             })\n// }\n//////////////////////////////////////////////////////\n\n/* Solution2 */\n// export const logout = async () => {\n//     localStorage.removeItem('user')\n//     /* OR */\n//     // localStorage.clear()\n// }","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/auth/authAPI.js"],"names":["axios","register","userData","post","login","getUser","token","get","headers"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACxC;AACA;AACA,SAAO,MAAMF,KAAK,CAACG,IAAN,CACL,kCADK,EAELD,QAFK,CAAb;AAIH,CAPM;AASP,OAAO,MAAME,KAAK,GAAG,MAAOF,QAAP,IAAoB;AACrC,SAAO,MAAMF,KAAK,CAACG,IAAN,CACL,uCADK,EAELD,QAFK,CAAb;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAOC,KAAP,IAAiB;AACpC,SAAO,MAAMN,KAAK,CAACO,GAAN,CACL,oCADK,EAEL;AAAIC,IAAAA,OAAO,EAAE;AACL,uBAAkB,UAASF,KAAM;AAD5B;AAAb,GAFK,CAAb;AAMH,CAPM;AASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export const register = (userData) => {\n//     return fetch('http://localhost:5000/api/users', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(userData)\n//             }).then(res => res.json())\n// }\n//////////////////////////////////////////////////////////////////\n\n/**\n * Using Axios and Proxy(within package.json - \"proxy\": \"http://localhost:5000\")\n */\nimport axios from 'axios'\n\nexport const register = async (userData) => {\n    // return await axios.post('/api/users/', userData) // But Proxy is not working!!!\n    ///////////////////////////////////////////////////\n    return await axios.post(\n            'http://localhost:5000/api/users/', \n            userData\n        )\n}\n\nexport const login = async (userData) => {\n    return await axios.post(\n            'http://localhost:5000/api/users/login', \n            userData\n        )\n}\n\nexport const getUser = async (token) => {\n    return await axios.get(\n            'http://localhost:5000/api/users/me', \n            {   headers: { \n                    'Authorization': `Bearer ${token}` \n                }\n            })\n}\n\n/* Solution1: Failed */\n// export const logout = async () => {\n//     return await axios.post(\n//             'http://localhost:5000/api/users/logout', \n//             {}, \n//             {   headers: { \n//                     'Authorization': `Bearer ${token}` \n//                 }\n//             })\n// }\n//////////////////////////////////////////////////////\n/* Solution2 */\n// export const logout = async () => {\n//     localStorage.removeItem('user')\n//     /* OR */\n//     // localStorage.clear()\n// }\n"]},"metadata":{},"sourceType":"module"}