{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetch, create, destroy // update\n} from './goalsAPI';\nconst initialState = {\n  items: [],\n  message: '',\n  isLoading: false,\n  isSuccess: false,\n  isError: false\n};\nexport const fetchGoals = createAsyncThunk('goals/fetchGoals', async (_, thunkAPI) => {\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await fetch(userToken);\n    return res.data.reverse();\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // export const createGoal = createAsyncThunk(\n//     'goals/createGoal',\n//     async ({ goalData, token }, thunkAPI) => {\n//         try {\n//             const res = await create(goalData, token)\n//             return res.data\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n/////////////////////////////////////////////////////////////////\n\nexport const createGoal = createAsyncThunk('goals/createGoal', async (goalData, thunkAPI) => {\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await create(goalData, userToken);\n    return res.data;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const destroyGoal = createAsyncThunk('goals/destroyGoal', async (goalId, thunkAPI) => {\n  try {\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await destroy(goalId, userToken);\n    return res.data;\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // export const updateGoal = createAsyncThunk(\n//     'goals/updateGoal',\n//     async (goalData, thunkAPI) => {\n//         try {\n//         } catch (error) {\n//         }\n//     }\n// )\n\nexport const goalsSlice = createSlice({\n  name: 'goals',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.message = '';\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n    },\n    removedItems: state => {\n      state.items = [];\n    }\n  },\n  extraReducers: build => {\n    build.addCase(fetchGoals.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchGoals.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.items = action.payload;\n    }).addCase(fetchGoals.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n    build.addCase(createGoal.pending, state => {\n      state.isLoading = true;\n    }).addCase(createGoal.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true; // state.items.unshift(action.payload)\n      ////////////////////////////////////////////////\n\n      state.items = [action.payload, ...state.items];\n    }).addCase(createGoal.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n    build.addCase(destroyGoal.pending, state => {\n      state.isLoading = true;\n    }).addCase(destroyGoal.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.items = state.items.filter(item => item._id !== action.payload.id);\n    }).addCase(destroyGoal.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset,\n  removedItems\n} = goalsSlice.actions;\nexport const selectGoals = state => state.goals;\nexport default goalsSlice.reducer;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/goals/goalsSlice.js"],"names":["createAsyncThunk","createSlice","fetch","create","destroy","initialState","items","message","isLoading","isSuccess","isError","fetchGoals","_","thunkAPI","userToken","getState","auth","user","token","res","data","reverse","error","response","toString","rejectWithValue","createGoal","goalData","destroyGoal","goalId","goalsSlice","name","reducers","reset","state","removedItems","extraReducers","build","addCase","pending","fulfilled","action","payload","rejected","filter","item","_id","id","actions","selectGoals","goals","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { fetch, create, destroy,\n    // update\n} from './goalsAPI'\n\n\nconst initialState = {\n    items: [],\n    message: '',\n    isLoading: false,\n    isSuccess: false,\n    isError: false\n}\n\nexport const fetchGoals = createAsyncThunk(\n    'goals/fetchGoals',\n    async (_, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await fetch(userToken)\n            return res.data.reverse()\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n// export const createGoal = createAsyncThunk(\n//     'goals/createGoal',\n//     async ({ goalData, token }, thunkAPI) => {\n//         try {\n//             const res = await create(goalData, token)\n//             return res.data\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n/////////////////////////////////////////////////////////////////\nexport const createGoal = createAsyncThunk(\n    'goals/createGoal',\n    async (goalData, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await create(goalData, userToken)\n            return res.data\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const destroyGoal = createAsyncThunk(\n    'goals/destroyGoal',\n    async (goalId, thunkAPI) => {\n        try {\n            const userToken = thunkAPI.getState().auth.user.token\n            const res = await destroy(goalId, userToken)\n            return res.data\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n// export const updateGoal = createAsyncThunk(\n//     'goals/updateGoal',\n//     async (goalData, thunkAPI) => {\n//         try {\n            \n//         } catch (error) {\n            \n//         }\n//     }\n// )\n\nexport const goalsSlice = createSlice({\n    name: 'goals',\n    initialState,\n    reducers: {\n        reset: state => {\n            state.message = ''\n            state.isLoading = false\n            state.isSuccess = false\n            state.isError = false\n        },\n        removedItems: state => {\n            state.items = []\n        }\n    },\n    extraReducers: build => {\n        build.addCase(fetchGoals.pending, state => {\n                state.isLoading = true\n            }).addCase(fetchGoals.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.items = action.payload\n            }).addCase(fetchGoals.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n        build.addCase(createGoal.pending, state => {\n                state.isLoading = true\n            }).addCase(createGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                // state.items.unshift(action.payload)\n                ////////////////////////////////////////////////\n                state.items = [ action.payload, ...state.items ]\n            }).addCase(createGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n        build.addCase(destroyGoal.pending, state => {\n                state.isLoading = true\n            }).addCase(destroyGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.items = state.items.filter(item => item._id !== action.payload.id)\n            }).addCase(destroyGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n    }\n})\n\nexport const { reset, removedItems } = goalsSlice.actions\n\nexport const selectGoals = state => state.goals\n\nexport default goalsSlice.reducer"]},"metadata":{},"sourceType":"module"}