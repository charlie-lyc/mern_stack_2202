{"ast":null,"code":"import _asyncToGenerator from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/regenerator/index.js\";// export const register = (userData) => {\n//     return fetch('http://localhost:5000/api/users', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(userData)\n//             }).then(res => res.json())\n// }\n//////////////////////////////////////////////////////////////////\n/**\n * Using Axios and Proxy(within package.json - \"proxy\": \"http://localhost:5000\")\n */import axios from'axios';export var register=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userData){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(// 'http://localhost:5000/api/users', // Development\n'/api/users',// Production\nuserData);case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function register(_x){return _ref.apply(this,arguments);};}();export var login=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userData){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.post(// 'http://localhost:5000/api/users/login', \n'/api/users/login',userData);case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function login(_x2){return _ref2.apply(this,arguments);};}();export var getUser=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(token){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(// 'http://localhost:5000/api/users/me', \n'/api/users/me',{headers:{Authorization:\"Bearer \".concat(token)}});case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function getUser(_x3){return _ref3.apply(this,arguments);};}();/* Solution1: Failed */ // export const logout = async (token) => {\n//     return await axios.post(\n//             'http://localhost:5000/api/users/logout',\n//             // '/api/users/logout', \n//             {}, \n//             {   \n//                 headers: { Authorization: `Bearer ${token}` }\n//             }\n//         )\n// }\n//////////////////////////////////////////////////////\n/* Solution2 */ // export const logout = async () => {\n//     localStorage.clear()\n//     /* OR */\n//     // localStorage.removeItem('user')\n// }","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/auth/authAPI.js"],"names":["axios","register","userData","post","login","getUser","token","get","headers","Authorization"],"mappings":"2TAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,QAAP,wIAGPF,CAAAA,KAAK,CAACG,IAAN,CACL;AACA,YAFK,CAES;AACdD,QAHK,CAHO,6GAAH,kBAARD,CAAAA,QAAQ,4CAAd,CAUP,MAAO,IAAMG,CAAAA,KAAK,2FAAG,kBAAOF,QAAP,6IACJF,CAAAA,KAAK,CAACG,IAAN,CACL;AACA,kBAFK,CAGLD,QAHK,CADI,iHAAH,kBAALE,CAAAA,KAAK,8CAAX,CAQP,MAAO,IAAMC,CAAAA,OAAO,2FAAG,kBAAOC,KAAP,6IACNN,CAAAA,KAAK,CAACO,GAAN,CACL;AACA,eAFK,CAGL,CACIC,OAAO,CAAE,CAAEC,aAAa,kBAAYH,KAAZ,CAAf,CADb,CAHK,CADM,iHAAH,kBAAPD,CAAAA,OAAO,8CAAb,CAUP,uB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,e,CACA;AACA;AACA;AACA;AACA","sourcesContent":["// export const register = (userData) => {\n//     return fetch('http://localhost:5000/api/users', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(userData)\n//             }).then(res => res.json())\n// }\n//////////////////////////////////////////////////////////////////\n\n/**\n * Using Axios and Proxy(within package.json - \"proxy\": \"http://localhost:5000\")\n */\nimport axios from 'axios'\n\nexport const register = async (userData) => {\n    // return await axios.post('/api/users/', userData) // But Proxy is not working!!!\n    ///////////////////////////////////////////////////\n    return await axios.post(\n            // 'http://localhost:5000/api/users', // Development\n            '/api/users', // Production\n            userData\n        )\n}\n\nexport const login = async (userData) => {\n    return await axios.post(\n            // 'http://localhost:5000/api/users/login', \n            '/api/users/login',\n            userData\n        )\n}\n\nexport const getUser = async (token) => {\n    return await axios.get(\n            // 'http://localhost:5000/api/users/me', \n            '/api/users/me',\n            {   \n                headers: { Authorization: `Bearer ${token}` }\n            }\n        )\n}\n\n/* Solution1: Failed */\n// export const logout = async (token) => {\n//     return await axios.post(\n//             'http://localhost:5000/api/users/logout',\n//             // '/api/users/logout', \n//             {}, \n//             {   \n//                 headers: { Authorization: `Bearer ${token}` }\n//             }\n//         )\n// }\n//////////////////////////////////////////////////////\n/* Solution2 */\n// export const logout = async () => {\n//     localStorage.clear()\n//     /* OR */\n//     // localStorage.removeItem('user')\n// }\n"]},"metadata":{},"sourceType":"module"}