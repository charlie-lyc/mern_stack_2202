{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { register, login, getUser // logout \n} from './authAPI';\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, thunkAPI) => {\n  try {\n    const response = await register(userData); // console.log(response)\n\n    return response.data.message; // return <Payload>\n  } catch (error) {\n    // console.log(error.response.data.message)\n    // console.log(error.message)\n    // console.log(error.toString())\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const loginUser = createAsyncThunk('auth/loginUser', async (userData, thunkAPI) => {\n  try {\n    const res = await login(userData); // console.log(res)\n\n    /*****************************************************/\n\n    localStorage.setItem('user', JSON.stringify(res.data));\n    /*****************************************************/\n\n    return res.data; // return <Payload>\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n}); // export const getUserData = createAsyncThunk(\n//     'auth/getUserData',\n//     async (token, thunkAPI) => {\n//         try {\n//             const res = await getUser(token)\n//             // console.log(res)\n//             return res.data // return <Payload>\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n////////////////////////////////////////////////////\n\nexport const getUserData = createAsyncThunk('auth/getUserData', async (_, thunkAPI) => {\n  try {\n    // const userToken = JSON.parse(localStorage.getItem('user')).token\n    ///////////////////////////////////////////////////////////////////\n    const userToken = thunkAPI.getState().auth.user.token;\n    const res = await getUser(userToken);\n    return res.data; // return <Payload>\n  } catch (error) {\n    const message = error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\n/* Solution1: Failed */\n// export const logoutUser = createAsyncThunk(\n//     'auth/logoutUser',\n//     async (token, thunkAPI) => {\n//         try {\n//             const res = await logout(token)\n//             // console.log(res)\n//             /********************************/\n//             localStorage.clear()\n//             /* OR */\n//             // localStorage.removeItem('user')\n//             /********************************/\n//             return res.data.message // return <Payload>\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n///////////////////////////////////////////////\n\n/* Solution2 */\n// export const logoutUser = createAsyncThunk(\n//     'auth/logoutUser',\n//     async () => {\n//         await logout()\n//     }\n// )\n\n/**\n * 'window.localStorage' stores data(ex. user's token) as a <string> in browser.\n * - localStorage.setItem()\n * - localStorage.getItem()\n * - localStorage.removeItem()\n * - localStorage.clear()\n */\n\nconst user = JSON.parse(localStorage.getItem('user')); // For Reloading Page!!!\n\n/******************************************************/\n\nconst initialState = {\n  user: user ? user : null,\n  message: '',\n  // status: 'idle' || 'loading' || 'success' || 'error'\n  isLoading: false,\n  isSuccess: false,\n  isError: false\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.message = ''; // status: 'idle' || 'loading' || 'success' || 'error'\n\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n    },\n\n    /* Solution3 */\n    loggedOut: state => {\n      state.user = null; // !!!\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      // state.status = 'loading'\n      state.isLoading = true;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.message = action.payload; // state.status = 'success'\n\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.message = action.payload; // state.status = 'error'\n\n      state.isLoading = false;\n      state.isError = true;\n    });\n    builder.addCase(loginUser.pending, state => {\n      // state.status = 'loading'\n      state.isLoading = true;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.user = action.payload; // !!!\n      // state.status = 'success'\n\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.message = action.payload; // state.status = 'error'\n\n      state.isLoading = false;\n      state.isError = true;\n    });\n    builder.addCase(getUserData.pending, state => {\n      // state.status = 'loading'\n      state.isLoading = true;\n    }).addCase(getUserData.fulfilled, (state, action) => {\n      state.user = action.payload; // !!!\n      // state.status = 'success'\n\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(getUserData.rejected, (state, action) => {\n      state.message = action.payload; // state.status = 'error'\n\n      state.isLoading = false;\n      state.isError = true;\n    });\n    /* Solution1: Failed */\n    // builder.addCase(logoutUser.pending, state => {\n    //         // state.status = 'loading'\n    //         state.isLoading = true\n    //     }).addCase(logoutUser.fulfilled, (state, action) => {\n    //         state.user = null // !!!\n    //         state.message = action.payload\n    //         // state.status = 'success'\n    //         state.isLoading = false\n    //         state.isSuccess = true\n    //     }).addCase(logoutUser.rejected, (state, action) => {\n    //         state.message = action.payload            \n    //         // state.status = 'error'\n    //         state.isLoading = false\n    //         state.isError = true\n    //     })\n    ///////////////////////////////////////////////////////////\n\n    /* Solution2 */\n    // builder.addCase(logoutUser.fulfilled, state => { \n    //         state.user = null // !!!\n    //     })\n  }\n});\nexport const {\n  reset,\n  loggedOut\n} = authSlice.actions;\nexport const selectAuth = state => state.auth;\n/* Solution3 */\n\nexport const logoutUser = () => (dispatch, getState) => {\n  dispatch(loggedOut());\n  /********************************/\n\n  localStorage.clear();\n  /* OR */\n  // localStorage.removeItem('user')\n\n  /********************************/\n};\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/features/auth/authSlice.js"],"names":["createAsyncThunk","createSlice","register","login","getUser","registerUser","userData","thunkAPI","response","data","message","error","toString","rejectWithValue","loginUser","res","localStorage","setItem","JSON","stringify","getUserData","_","userToken","getState","auth","user","token","parse","getItem","initialState","isLoading","isSuccess","isError","authSlice","name","reducers","reset","state","loggedOut","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","selectAuth","logoutUser","dispatch","clear","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { \n    register, \n    login,\n    getUser, \n    // logout \n} from './authAPI'\n\n\nexport const registerUser = createAsyncThunk(\n    'auth/registerUser',\n    async (userData, thunkAPI) => {\n        try {\n            const response = await register(userData)\n            // console.log(response)\n            return response.data.message // return <Payload>\n        } catch (error) {\n            // console.log(error.response.data.message)\n            // console.log(error.message)\n            // console.log(error.toString())\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\nexport const loginUser = createAsyncThunk(\n    'auth/loginUser',\n    async (userData, thunkAPI) => {\n        try {\n            const res = await login(userData)\n            // console.log(res)\n            /*****************************************************/\n            localStorage.setItem('user', JSON.stringify(res.data))\n            /*****************************************************/\n            return res.data // return <Payload>\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n// export const getUserData = createAsyncThunk(\n//     'auth/getUserData',\n//     async (token, thunkAPI) => {\n//         try {\n//             const res = await getUser(token)\n//             // console.log(res)\n//             return res.data // return <Payload>\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n////////////////////////////////////////////////////\nexport const getUserData = createAsyncThunk(\n    'auth/getUserData',\n    async (_, thunkAPI) => {\n        try {\n\n            // const userToken = JSON.parse(localStorage.getItem('user')).token\n            ///////////////////////////////////////////////////////////////////\n            const userToken = thunkAPI.getState().auth.user.token\n\n            const res = await getUser(userToken)\n            return res.data // return <Payload>\n        } catch (error) {\n            const message = error.response.data.message || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)\n\n/* Solution1: Failed */\n// export const logoutUser = createAsyncThunk(\n//     'auth/logoutUser',\n//     async (token, thunkAPI) => {\n//         try {\n//             const res = await logout(token)\n//             // console.log(res)\n//             /********************************/\n//             localStorage.clear()\n//             /* OR */\n//             // localStorage.removeItem('user')\n//             /********************************/\n//             return res.data.message // return <Payload>\n//         } catch (error) {\n//             const message = error.response.data.message || error.message || error.toString()\n//             return thunkAPI.rejectWithValue(message)\n//         }\n//     }\n// )\n///////////////////////////////////////////////\n/* Solution2 */\n// export const logoutUser = createAsyncThunk(\n//     'auth/logoutUser',\n//     async () => {\n//         await logout()\n//     }\n// )\n\n\n/**\n * 'window.localStorage' stores data(ex. user's token) as a <string> in browser.\n * - localStorage.setItem()\n * - localStorage.getItem()\n * - localStorage.removeItem()\n * - localStorage.clear()\n */\nconst user = JSON.parse(localStorage.getItem('user')) // For Reloading Page!!!\n/******************************************************/\n\nconst initialState = {\n    user: user ? user : null,\n    message: '',\n    // status: 'idle' || 'loading' || 'success' || 'error'\n    isLoading: false,\n    isSuccess: false,\n    isError: false\n}\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: state => {\n            state.message = ''\n            // status: 'idle' || 'loading' || 'success' || 'error'\n            state.isError = false\n            state.isLoading = false\n            state.isSuccess = false\n        },\n        /* Solution3 */\n        loggedOut: state => {\n            state.user = null // !!!\n        }\n    },\n    extraReducers: builder => {\n        builder.addCase(registerUser.pending, state => {\n                // state.status = 'loading'\n                state.isLoading = true\n            }).addCase(registerUser.fulfilled, (state, action) => {\n                state.message = action.payload\n                // state.status = 'success'\n                state.isLoading = false\n                state.isSuccess = true\n            }).addCase(registerUser.rejected, (state, action) => {\n                state.message = action.payload\n                // state.status = 'error'\n                state.isLoading = false\n                state.isError = true\n            })\n        builder.addCase(loginUser.pending, state => {\n                // state.status = 'loading'\n                state.isLoading = true\n            }).addCase(loginUser.fulfilled, (state, action) => {\n                state.user = action.payload // !!!\n                // state.status = 'success'\n                state.isLoading = false\n                state.isSuccess = true\n            }).addCase(loginUser.rejected, (state, action) => {\n                state.message = action.payload\n                // state.status = 'error'\n                state.isLoading = false\n                state.isError = true\n            })\n        builder.addCase(getUserData.pending, state => {\n                // state.status = 'loading'\n                state.isLoading = true\n            }).addCase(getUserData.fulfilled, (state, action) => {\n                state.user = action.payload // !!!\n                // state.status = 'success'\n                state.isLoading = false\n                state.isSuccess = true\n            }).addCase(getUserData.rejected, (state, action) => {\n                state.message = action.payload\n                // state.status = 'error'\n                state.isLoading = false\n                state.isError = true\n            })\n        /* Solution1: Failed */\n        // builder.addCase(logoutUser.pending, state => {\n        //         // state.status = 'loading'\n        //         state.isLoading = true\n        //     }).addCase(logoutUser.fulfilled, (state, action) => {\n        //         state.user = null // !!!\n        //         state.message = action.payload\n        //         // state.status = 'success'\n        //         state.isLoading = false\n        //         state.isSuccess = true\n        //     }).addCase(logoutUser.rejected, (state, action) => {\n        //         state.message = action.payload            \n        //         // state.status = 'error'\n        //         state.isLoading = false\n        //         state.isError = true\n        //     })\n        ///////////////////////////////////////////////////////////\n        /* Solution2 */\n        // builder.addCase(logoutUser.fulfilled, state => { \n        //         state.user = null // !!!\n        //     })\n    }\n})\n\nexport const { reset, loggedOut } = authSlice.actions\n\nexport const selectAuth = state => state.auth\n\n/* Solution3 */\nexport const logoutUser = () => (dispatch, getState) => {\n    dispatch(loggedOut())\n    /********************************/\n    localStorage.clear()\n    /* OR */\n    // localStorage.removeItem('user')\n    /********************************/\n}\n\nexport default authSlice.reducer"]},"metadata":{},"sourceType":"module"}