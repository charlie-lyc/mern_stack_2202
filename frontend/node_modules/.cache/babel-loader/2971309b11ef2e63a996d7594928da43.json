{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/Goals.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuth } from '../features/auth/authSlice';\nimport { fetchAllGoals, selectGoals } from '../features/goals/goalsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Goals = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(selectAuth);\n  const {\n    items\n  } = useSelector(selectGoals);\n  console.log(items);\n  useEffect(() => {\n    dispatch(fetchAllGoals(user.token));\n  }, [dispatch, user.token]);\n  let goalItems;\n\n  if (!items || items.length === 0) {\n    goalItems = /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this);\n  } else {\n    goalItems = items.map((goal, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n      post: goal,\n      children: goal.text\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Goals\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: goalItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Goals, \"qk8UwlmooA6vMm/aee4WpGiLGOs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Goals;\nexport default Goals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/Goals.jsx"],"names":["useEffect","useDispatch","useSelector","selectAuth","fetchAllGoals","selectGoals","Goals","dispatch","user","items","console","log","token","goalItems","length","map","goal","idx","text"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,8BAA3C;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWN,WAAW,CAACC,UAAD,CAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYP,WAAW,CAACG,WAAD,CAA7B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACH,aAAa,CAACI,IAAI,CAACI,KAAN,CAAd,CAAR;AACH,GAFQ,EAEN,CAAEL,QAAF,EAAYC,IAAI,CAACI,KAAjB,CAFM,CAAT;AAIA,MAAIC,SAAJ;;AACA,MAAI,CAACJ,KAAD,IAAUA,KAAK,CAACK,MAAN,KAAiB,CAA/B,EAAkC;AAC9BD,IAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACH,GAFD,MAEO;AACHA,IAAAA,SAAS,GAAGJ,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAClB;AAAgB,MAAA,IAAI,EAAGD,IAAvB;AAAA,gBAAgCA,IAAI,CAACE;AAArC,OAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,YADQ,CAAZ;AAGH;;AAED,sBACI;AAAA,qCAEI;AAAA,gBACMJ;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3BD;;GAAMP,K;UACeL,W,EACAC,W,EACCA,W;;;KAHhBI,K;AA6BN,eAAeA,KAAf","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectAuth } from '../features/auth/authSlice'\nimport { fetchAllGoals, selectGoals } from '../features/goals/goalsSlice'\n\nconst Goals = () => {\n    const dispatch = useDispatch()\n    const { user } = useSelector(selectAuth)\n    const { items } = useSelector(selectGoals)\n    console.log(items)\n\n    useEffect(() => {\n        dispatch(fetchAllGoals(user.token))\n    }, [ dispatch, user.token ])\n\n    let goalItems\n    if (!items || items.length === 0) {\n        goalItems = <h3>No Goals</h3>\n    } else {\n        goalItems = items.map((goal, idx) => \n            <li key={ idx } post={ goal }>{ goal.text }</li>\n        )\n    }\n\n    return (\n        <div>\n            Goals\n            <ul>\n                { goalItems }\n            </ul>\n        </div>\n    )\n}\n\nexport default Goals"]},"metadata":{},"sourceType":"module"}