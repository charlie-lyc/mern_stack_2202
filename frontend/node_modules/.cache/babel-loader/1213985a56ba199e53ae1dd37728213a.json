{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/Goals.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuth } from '../features/auth/authSlice';\nimport { fetchGoals, selectGoals } from '../features/goals/goalsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Goals = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(selectAuth);\n  const {\n    items\n  } = useSelector(selectGoals);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    } else {\n      dispatch(fetchGoals(user.token));\n    }\n  }, [user, navigate, dispatch]);\n  let goalItems;\n\n  if (!items || items.length === 0) {\n    goalItems = /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"- No Goals -\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this);\n  } else {\n    goalItems = items.map((goal, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n      post: goal,\n      children: goal.text\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Latest Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: goalItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Goals, \"jvPqU1vGO6d0ZrlSN0sKr175ayg=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n\n_c = Goals;\nexport default Goals;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/components/Goals.jsx"],"names":["useEffect","useNavigate","useDispatch","useSelector","selectAuth","fetchGoals","selectGoals","Goals","navigate","dispatch","user","items","token","goalItems","length","map","goal","idx","text"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,8BAAxC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAWP,WAAW,CAACC,UAAD,CAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAYR,WAAW,CAACG,WAAD,CAA7B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,IAAL,EAAW;AACPF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,QAAQ,CAACJ,UAAU,CAACK,IAAI,CAACE,KAAN,CAAX,CAAR;AACH;AACJ,GANQ,EAMN,CAAEF,IAAF,EAAQF,QAAR,EAAkBC,QAAlB,CANM,CAAT;AAQA,MAAII,SAAJ;;AACA,MAAI,CAACF,KAAD,IAAUA,KAAK,CAACG,MAAN,KAAiB,CAA/B,EAAkC;AAC9BD,IAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACH,GAFD,MAEO;AACHA,IAAAA,SAAS,GAAGF,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBAClB;AAAgB,MAAA,IAAI,EAAGD,IAAvB;AAAA,gBAAgCA,IAAI,CAACE;AAArC,OAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,YADQ,CAAZ;AAGH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACMJ;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA/BD;;GAAMN,K;UACeN,W,EACAC,W,EACAC,W,EACCA,W;;;KAJhBI,K;AAiCN,eAAeA,KAAf","sourcesContent":["import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectAuth } from '../features/auth/authSlice'\nimport { fetchGoals, selectGoals } from '../features/goals/goalsSlice'\n\nconst Goals = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { user } = useSelector(selectAuth)\n    const { items } = useSelector(selectGoals)\n\n    useEffect(() => {\n        if (!user) {\n            navigate('/login')\n        } else {\n            dispatch(fetchGoals(user.token))\n        }\n    }, [ user, navigate, dispatch ])\n\n    let goalItems\n    if (!items || items.length === 0) {\n        goalItems = <h4>- No Goals -</h4>\n    } else {\n        goalItems = items.map((goal, idx) => \n            <li key={ idx } post={ goal }>{ goal.text }</li>\n        )\n    }\n\n    return (\n        <div>\n            <h3>Latest Goals</h3>\n            <ul>\n                { goalItems }\n            </ul>\n        </div>\n    )\n}\n\nexport default Goals"]},"metadata":{},"sourceType":"module"}