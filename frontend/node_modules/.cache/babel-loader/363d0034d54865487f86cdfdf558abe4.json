{"ast":null,"code":"import _defineProperty from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{registerUser,reset,selectAuth}from'../features/auth/authSlice';/////////////////////////////////////////////////////\nimport{FaUser}from'react-icons/fa';import{toast}from'react-toastify';import Spinner from'../components/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Register=function Register(){var _useState=useState({name:'',email:'',password:'',confirm:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,confirm=formData.confirm;var dispatch=useDispatch();var navigate=useNavigate();var _useSelector=useSelector(selectAuth),isSuccess=_useSelector.isSuccess,isError=_useSelector.isError,message=_useSelector.message,isLoading=_useSelector.isLoading;useEffect(function(){if(isSuccess){toast.success(message,{autoClose:750});dispatch(reset());navigate('/login');}if(isError){toast.error(message,{autoClose:750});dispatch(reset());navigate('/register');}},[dispatch,navigate,isSuccess,isError,message]);var handleChange=function handleChange(e){e.preventDefault();setFormData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},e.target.name,e.target.value));});};var handleSubmit=function handleSubmit(e){e.preventDefault();// console.log(formData)\nif(password!==confirm){return toast.error('Passwords do not match',{autoClose:750});}var userData={name:name,email:email,password:password};dispatch(registerUser(userData));setFormData(function(){return{name:'',email:'',password:'',confirm:''};});};if(isLoading)return/*#__PURE__*/_jsx(Spinner,{});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"heading\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[/*#__PURE__*/_jsx(FaUser,{}),\" Register\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Please Create An Account\"})]}),/*#__PURE__*/_jsx(\"section\",{className:\"form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",onChange:handleChange,value:name,placeholder:\"Enter your name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",onChange:handleChange,value:email,placeholder:\"Enter your email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",onChange:handleChange,value:password,placeholder:\"Enter password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirm\",onChange:handleChange,value:confirm,placeholder:\"Confirm password\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-block\",children:\"Submit\"})]})})]});};export default Register;","map":{"version":3,"sources":["/Users/charlie/Documents/YouTube/BradTraversy/mern_stack_2202/frontend/src/pages/Register.jsx"],"names":["useState","useEffect","useNavigate","useDispatch","useSelector","registerUser","reset","selectAuth","FaUser","toast","Spinner","Register","name","email","password","confirm","formData","setFormData","dispatch","navigate","isSuccess","isError","message","isLoading","success","autoClose","error","handleChange","e","preventDefault","prevState","target","value","handleSubmit","userData"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { registerUser, reset, selectAuth } from '../features/auth/authSlice'\n/////////////////////////////////////////////////////\nimport { FaUser } from 'react-icons/fa'\nimport { toast } from 'react-toastify'\nimport Spinner from '../components/Spinner'\n\n\nconst Register = () => {\n    const [formData, setFormData ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirm: ''\n    })\n    const { name, email, password, confirm } = formData\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const { isSuccess, isError, message, isLoading } = useSelector(selectAuth)\n    \n    useEffect(() => {\n        if (isSuccess) {\n            toast.success(message, { autoClose: 750})\n            dispatch(reset())\n            navigate('/login')\n        }\n        if (isError) {\n            toast.error(message, { autoClose: 750})\n            dispatch(reset())\n            navigate('/register')\n        }\n    }, [ dispatch, navigate, isSuccess, isError, message ])\n\n    const handleChange = e => {\n        e.preventDefault()\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value\n        }))\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        // console.log(formData)\n        if (password !== confirm) {\n            return toast.error('Passwords do not match', { autoClose: 750})\n        }\n        const userData = { name, email, password }\n        dispatch(registerUser(userData))\n        setFormData(() => ({\n            name: '',\n            email: '',\n            password: '',\n            confirm: ''\n        }))\n    }\n\n    if (isLoading) return <Spinner />\n\n    return (\n        <>\n            <section className='heading'>\n                <h1>\n                    <FaUser /> Register\n                </h1>\n                <p>Please Create An Account</p>\n            </section>\n            <section className='form'>\n                <form onSubmit={ handleSubmit }>\n                    <div className='form-group'>\n                        <input type='text' \n                            name='name' \n                            onChange={ handleChange } \n                            value={ name } \n                            placeholder='Enter your name' />\n                        <input type='text' \n                            name='email' \n                            onChange={ handleChange } \n                            value={ email } \n                            placeholder='Enter your email' />\n                        <input type='password'\n                            name='password' \n                            onChange={ handleChange } \n                            value={ password } \n                            placeholder='Enter password' />\n                        <input type='password' \n                            name='confirm' \n                            onChange={ handleChange } \n                            value={ confirm } \n                            placeholder='Confirm password' />\n                    </div>\n                    <button type=\"submit\" className='btn btn-block'>\n                        Submit\n                    </button>\n                </form>\n            </section>\n        </>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}